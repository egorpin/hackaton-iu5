// src/components/ResultsDisplay.jsx
import React from 'react';

export default function ResultsDisplay({ orbitParams, closeApproach, observations }) {
  if (!orbitParams) {
    return (
      <div className="calculation-info">
        <p>–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ä–±–∏—Ç–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.</p>
      </div>
    );
  }

  // –†–∞—Å—á–µ—Ç –ø–µ—Ä–∏–æ–¥–∞ –ø–æ 3-–º—É –∑–∞–∫–æ–Ω—É –ö–µ–ø–ª–µ—Ä–∞ (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö)
  const periodInDays = orbitParams.period || (orbitParams.semimajor_axis ? Math.sqrt(Math.pow(orbitParams.semimajor_axis, 3)) * 365.25 : null);

  return (
    <div className="results-section">
      <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</h3>
      <div className="info-grid">
        <div className="info-item">
          <span className="info-label">–ë–æ–ª—å—à–∞—è –ø–æ–ª—É–æ—Å—å (a):</span>
          <span className="info-value">{orbitParams.semimajor_axis?.toFixed(3)} –∞.–µ.</span>
        </div>
        <div className="info-item">
          <span className="info-label">–≠–∫—Å—Ü–µ–Ω—Ç—Ä–∏—Å–∏—Ç–µ—Ç (e):</span>
          <span className="info-value">{orbitParams.eccentricity?.toFixed(3)}</span>
        </div>
        <div className="info-item">
          <span className="info-label">–ù–∞–∫–ª–æ–Ω–µ–Ω–∏–µ (i):</span>
          <span className="info-value">{orbitParams.inclination?.toFixed(2)}¬∞</span>
        </div>
        <div className="info-item">
          <span className="info-label">–î–æ–ª–≥–æ—Ç–∞ –≤–æ—Å—Ö. —É–∑–ª–∞ (Œ©):</span>
          <span className="info-value">{orbitParams.ra_of_node?.toFixed(2)}¬∞</span>
        </div>
        <div className="info-item">
          <span className="info-label">–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–∏—Ü–µ–Ω—Ç—Ä–∞ (œâ):</span>
          <span className="info-value">{orbitParams.arg_of_pericenter?.toFixed(2)}¬∞</span>
        </div>
        {periodInDays && (
          <div className="info-item">
            <span className="info-label">–ü–µ—Ä–∏–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è:</span>
            {/* ‚ùóÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
            <span className="info-value">{periodInDays?.toFixed(0)} –¥–Ω–µ–π</span>
          </div>
        )}
      </div>

      {closeApproach && (
        <div className="close-approach" style={{ marginTop: '1rem' }}>
          <h4>üåç –°–±–ª–∏–∂–µ–Ω–∏–µ —Å –ó–µ–º–ª–µ–π</h4>
          <div className="info-grid">
            <div className="info-item">
              <span className="info-label">–î–∞—Ç–∞:</span>
              <span className="info-value">
                {new Date(closeApproach.approach_date).toLocaleDateString('ru-RU')}
              </span>
            </div>
            <div className="info-item">
              <span className="info-label">–î–∏—Å—Ç–∞–Ω—Ü–∏—è:</span>
              <span className="info-value">
                {closeApproach.min_distance_au?.toFixed(3)} –∞.–µ.
              </span>
            </div>
          </div>
        </div>
      )}

      <div className="calculation-info" style={{ marginTop: '1rem' }}>
        <p>‚úÖ –†–∞—Å—á–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ {observations?.length || 0} –Ω–∞–±–ª—é–¥–µ–Ω–∏—è—Ö</p>
        {orbitParams.calculation_date && (
          <p className="timestamp">
            –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—á–µ—Ç: {new Date(orbitParams.calculation_date).toLocaleString('ru-RU')}
          </p>
        )}
      </div>
    </div>
  );
}
