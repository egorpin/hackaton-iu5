// src/App.jsx

import React from 'react';
import { useState, useEffect, useMemo } from 'react';
import CometOrbitScene from './components/CometOrbitScene';
import ObservationForm from './components/ObservationForm';
import CometSelector from './components/CometSelector';
import ResultsDisplay from './components/ResultsDisplay';
import '../style.css';

function App() {
  const [orbitParams, setOrbitParams] = useState(null);
  const [observations, setObservations] = useState([]);
  const [closeApproach, setCloseApproach] = useState(null);
  const [selectedComet, setSelectedComet] = useState(null);

  useEffect(() => {
    if (window.AOS) {
      window.AOS.init({ once: true });
    }
    if (window.feather) {
      window.feather.replace();
    }
  }, []);

  const handleOrbitCalculated = (params, obs, approach) => {
    setOrbitParams(params);
    setObservations(obs);
    setCloseApproach(approach);
    setSelectedComet(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—É—é —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—É—é –æ—Ä–±–∏—Ç—É
  };

  const handleCometSelect = (comet) => {
    setSelectedComet(comet);
    setOrbitParams(null);
    setObservations([]);
    setCloseApproach(null);
    document.getElementById('visualization-section')?.scrollIntoView({ behavior: 'smooth' });
  };

  // ‚ùóÔ∏è –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const activeOrbitData = useMemo(() => {
    // 1. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–µ—Ç—ã —Å –±—ç–∫–µ–Ω–¥–∞
    if (selectedComet && selectedComet.elements) {
      return {
        source: 'backend',
        name: selectedComet.name,
        params: selectedComet.elements,
        observations: selectedComet.observations,
        approach: selectedComet.close_approach,
      };
    }
    // 2. –ï—Å–ª–∏ –µ—Å—Ç—å —Å–≤–µ–∂–µ—Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –æ—Ä–±–∏—Ç–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (orbitParams) {
      return {
        source: 'calculated',
        name: '–ù–æ–≤–∞—è —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –∫–æ–º–µ—Ç–∞',
        params: {
          semimajor_axis: orbitParams.semiMajorAxis,
          eccentricity: orbitParams.eccentricity,
          inclination: orbitParams.inclination,
          ra_of_node: orbitParams.longitudeOfAscNode,
          arg_of_pericenter: orbitParams.argOfPeriapsis,
          period: orbitParams.period,
        },
        observations: observations,
        approach: closeApproach,
      };
    }
    // 3. ‚ùóÔ∏è –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null. –°—Ü–µ–Ω–∞ –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π.
    return null;
  }, [selectedComet, orbitParams, observations, closeApproach]);

  const scrollToObservations = () => {
    document.getElementById('observations-section')?.scrollIntoView({ behavior: 'smooth' });
  };

  const scrollToVisualization = () => {
    document.getElementById('visualization-section')?.scrollIntoView({ behavior: 'smooth' });
  };

  return (
    <>
      <header data-aos="fade-down" data-aos-delay="200">{/* ... */}</header>
      <a href="#" className="to-top"><i data-feather="chevron-up"></i></a>
      <section className="hero">{/* ... */}</section>
      <section className="status">{/* ... */}</section>

      <section id="observations-section" className="why-us">
        <div className="container">
          <div className="content">
            <div className="title" data-aos="fade-up" data-aos-delay="400">
              <h2>–°–ò–°–¢–ï–ú–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –û–†–ë–ò–¢</h2>
              <h1>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π</h1>
              <p>–î–æ–±–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 3 –∞—Å—Ç—Ä–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ—Ä–±–∏—Ç—ã.</p>
            </div>
            <div className="reason">
              <div className="card" data-aos="fade-up" data-aos-delay="400" style={{ width: '100%', height: 'auto' }}>
                <ObservationForm onOrbitCalculated={handleOrbitCalculated} existingObservations={observations} />
              </div>
              {orbitParams && (
                <div className="card" data-aos="fade-up" data-aos-delay="200" style={{ width: '100%', height: 'auto', marginTop: '2rem' }}>
                  <ResultsDisplay orbitParams={orbitParams} closeApproach={closeApproach} observations={observations} />
                </div>
              )}
            </div>
          </div>
        </div>
      </section>

      <section id="selector-section" className="comet-database">
        <div className="container">
          <div className="content">
            <div className="title" data-aos="fade-up" data-aos-delay="400">
              <h2>–ë–ê–ó–ê –î–ê–ù–ù–´–•</h2>
              <h1>–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–µ—Ç—ã</h1>
              <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–µ—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ–µ –æ—Ä–±–∏—Ç—É –∏ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—é.</p>
            </div>
            <div className="card" data-aos="fade-up" data-aos-delay="500" style={{ width: '100%' }}>
              <CometSelector onCometSelect={handleCometSelect} selectedCometId={selectedComet ? selectedComet.id : null} />
            </div>
          </div>
        </div>
      </section>

      <section id="visualization-section" className="visualization-3d">
        <div className="container">
          <div className="content">
            <div className="title" data-aos="fade-up" data-aos-delay="200">
              <h2>3D –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø –û–†–ë–ò–¢–´</h2>
              {/* ‚ùóÔ∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ */}
              <h1>{activeOrbitData ? activeOrbitData.name : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è'}</h1>
              <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –º–æ–¥–µ–ª—å –æ—Ä–±–∏—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º—ã—à—å –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.</p>
            </div>
            <div className="orbit-visualization" data-aos="fade-up" data-aos-delay="400">
              <div className="visualization-container">
                {/* ‚ùóÔ∏è –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ null. –°—Ü–µ–Ω–∞ —Å–∞–º–∞ —Ä–µ—à–∏—Ç, —á—Ç–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å */}
                <CometOrbitScene orbitToDisplay={activeOrbitData ? activeOrbitData.params : null} />
              </div>
              <div className="orbit-info">
                {/* ‚ùóÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –æ—Ä–±–∏—Ç–∞ */}
                {activeOrbitData ? (
                  <>
                    <div className="info-grid">
                      <div className="info-item">
                        <span className="info-label">–ë–æ–ª—å—à–∞—è –ø–æ–ª—É–æ—Å—å (a):</span>
                        <span className="info-value">{activeOrbitData.params.semimajor_axis.toFixed(3)} –∞.–µ.</span>
                      </div>
                      <div className="info-item">
                        <span className="info-label">–≠–∫—Å—Ü–µ–Ω—Ç—Ä–∏—Å–∏—Ç–µ—Ç (e):</span>
                        <span className="info-value">{activeOrbitData.params.eccentricity.toFixed(3)}</span>
                      </div>
                      <div className="info-item">
                        <span className="info-label">–ù–∞–∫–ª–æ–Ω–µ–Ω–∏–µ (i):</span>
                        <span className="info-value">{activeOrbitData.params.inclination.toFixed(2)}¬∞</span>
                      </div>
                      <div className="info-item">
                        <span className="info-label">–î–æ–ª–≥–æ—Ç–∞ –≤–æ—Å—Ö. —É–∑–ª–∞ (Œ©):</span>
                        <span className="info-value">{activeOrbitData.params.ra_of_node.toFixed(2)}¬∞</span>
                      </div>
                      <div className="info-item">
                        <span className="info-label">–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–∏—Ü–µ–Ω—Ç—Ä–∞ (œâ):</span>
                        <span className="info-value">{activeOrbitData.params.arg_of_pericenter.toFixed(2)}¬∞</span>
                      </div>
                      <div className="info-item">
                        <span className="info-label">–ü–µ—Ä–∏–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è:</span>
                        <span className="info-value">{activeOrbitData.params.period.toFixed(0)} –¥–Ω–µ–π</span>
                      </div>
                    </div>
                    <div className="calculation-info">
                      <p>
                        {activeOrbitData.source === 'calculated'
                          ? `‚úÖ –û—Ä–±–∏—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ø–æ ${activeOrbitData.observations.length} –Ω–∞–±–ª—é–¥–µ–Ω–∏—è–º`
                          : `üìÑ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∫–æ–º–µ—Ç—ã "${activeOrbitData.name}"`}
                      </p>
                    </div>
                  </>
                ) : (
                  <div className="calculation-info">
                    <p>üåü –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Ä–±–∏—Ç—ã</p>
                    <p className="timestamp">
                      –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –Ω–æ–≤—É—é –æ—Ä–±–∏—Ç—É, –≤–≤–µ–¥—è –¥–∞–Ω–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–µ—Ç—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
                    </p>
                    <button
                      className="btn-primary"
                      onClick={scrollToObservations}
                      style={{ marginTop: '1rem', width: 'auto', padding: '0.5rem 1rem' }}
                    >
                      –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–≤–æ–¥—É –¥–∞–Ω–Ω—ã—Ö
                    </button>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </section>

      <footer>
        <p>404: logic not found - Orbit Determinator ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–±–∏—Ç –Ω–µ–±–µ—Å–Ω—ã—Ö —Ç–µ–ª</p>
      </footer>
    </>
  );
}

export default App;
