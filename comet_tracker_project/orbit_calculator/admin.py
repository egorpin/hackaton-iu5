from django.contrib import admin
from .models import Comet, Observation, OrbitalElements, CloseApproach

# ----------------------------------------------------------------------
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (Inlines)
# ----------------------------------------------------------------------

class ObservationInline(admin.TabularInline):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–µ—Ç—ã."""
    model = Observation
    extra = 1

    # –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º ra_deg/dec_deg –¥–ª—è –≤–≤–æ–¥–∞/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,
    # —Ç–∞–∫ –∫–∞–∫ Inline –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É 'write_only' –∏–∑ Serializer)
    fields = (
        'observation_time',
        'ra_deg',
        'dec_deg',
        'photo',
        'ra_hms_display', # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ H/M/S
        'dec_dms_display' # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ D/M/S
    )

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –ø–æ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è)
    readonly_fields = ('photo', 'ra_hms_display', 'dec_dms_display')

    # üí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    @admin.display(description='RA (–ß–ß:–ú–ú:–°–°)')
    def ra_hms_display(self, obj):
        if obj.ra_deg is not None:
            parts = obj.ra_hms_parts
            return f"{parts['raHours']:02d}h {parts['raMinutes']:02d}m {parts['raSeconds']:.3f}s"
        return "N/A"

    @admin.display(description='DEC (–î–î:–ú–ú:–°–°)')
    def dec_dms_display(self, obj):
        if obj.dec_deg is not None:
            parts = obj.dec_dms_parts
            return f"{parts['decSign']}{parts['decDegrees']:02d}¬∞ {parts['decMinutes']:02d}' {parts['decSeconds']:.2f}\""
        return "N/A"

class OrbitalElementsInline(admin.StackedInline):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ä–±–∏—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–µ—Ç—ã."""
    model = OrbitalElements
    can_delete = False
    verbose_name = "–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –≠–ª–µ–º–µ–Ω—Ç—ã –û—Ä–±–∏—Ç—ã"

    # ‚ùóÔ∏è –ù–û–í–û–ï: –ò—Å–∫–ª—é—á–∏—Ç–µ 'calculation_date' –∏–∑ –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤ —Ñ–æ—Ä–º–µ.
    # –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ 'fieldsets', –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω–æ —Ç–∞–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ 'readonly'.
    # –í inlines —É–¥–æ–±–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 'exclude' –ò 'readonly_fields'.

    exclude = ('calculation_date',) # –ò—Å–∫–ª—é—á–∞–µ–º –µ–≥–æ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã

    # –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fieldsets = (
        (None, {
            'fields': (('semimajor_axis', 'eccentricity'),
                       ('inclination', 'ra_of_node', 'arg_of_pericenter'),
                       'time_of_pericenter'),
        }),
        ('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞', {
            'fields': ('calculation_date', 'rms_error'), # –ó–¥–µ—Å—å –æ–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            'classes': ('collapse',),
        })
    )

    # ‚ùóÔ∏è –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º 'calculation_date' –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.
    # –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç fieldsets –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –µ–≥–æ.
    readonly_fields = ('calculation_date',)

class CloseApproachInline(admin.TabularInline):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ —Å–±–ª–∏–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ä–±–∏—Ç—ã."""
    model = CloseApproach
    can_delete = False
    max_num = 1
    fields = ('approach_date', 'min_distance_au')
    verbose_name = "–ü—Ä–æ–≥–Ω–æ–∑ –°–±–ª–∏–∂–µ–Ω–∏—è —Å –ó–µ–º–ª–µ–π"


# ----------------------------------------------------------------------
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã Admin
# ----------------------------------------------------------------------

@admin.register(Comet)
class CometAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –º–æ–¥–µ–ª–∏ –ö–æ–º–µ—Ç—ã."""
    list_display = ('name', 'created_at', 'get_element_status', 'get_approach_distance')
    search_fields = ('name',)
    list_filter = ('created_at',)

    # –í–∫–ª—é—á–∞–µ–º inlines –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    inlines = [ObservationInline, OrbitalElementsInline]

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è list_display
    @admin.display(description='–°—Ç–∞—Ç—É—Å –û—Ä–±–∏—Ç—ã')
    def get_element_status(self, obj):
        return "‚úÖ –†–∞—Å—Å—á–∏—Ç–∞–Ω–∞" if hasattr(obj, 'elements') else "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

    @admin.display(description='–ú–∏–Ω. –î–∏—Å—Ç–∞–Ω—Ü–∏—è (–∞.–µ.)')
    def get_approach_distance(self, obj):
        try:
            return f"{obj.elements.approaches.latest('id').min_distance_au:.4f} –∞.–µ."
        except:
            return "N/A"

@admin.register(OrbitalElements)
class OrbitalElementsAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ä–±–∏—Ç—ã."""
    list_display = ('comet', 'semimajor_axis', 'eccentricity', 'inclination', 'calculation_date')
    list_filter = ('calculation_date',)
    search_fields = ('comet__name',)

    # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ —Å–±–ª–∏–∂–µ–Ω–∏—è –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
    inlines = [CloseApproachInline]

# –ú–æ–¥–µ–ª–∏ Observation –∏ CloseApproach –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ,
# —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ Comet –∏ OrbitalElements.

# –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ù–∞–±–ª—é–¥–µ–Ω–∏—è–º–∏ –æ—Ç–¥–µ–ª—å–Ω–æ:
# @admin.register(Observation)
# class ObservationAdmin(admin.ModelAdmin):
#     list_display = ('comet', 'observation_time', 'ra_hms', 'dec_dms')
#     list_filter = ('observation_time', 'comet')
